/*
$light: #f8f8f2;
$lightgray: #828380;
$gray1: #75715e;
$gray2: #49483E;
$gray3: #3e3d32;
$dark: #272822;
$red: #f92772;
$purple: #be84ff;
$green: #a6e22d;
$yellow: #e6db74;
$orange: #f6aa10;
$blue: #66d9ef;

$linkBlue: hsl(198, 49%, 46%);
$hiGreen: hsl(70, 100%, 50%);
*/

/*TODO: these styles have been made with a non retina screen, check with retina too! */

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  font: inherit;
  line-height: inherit;
  color: inherit;
  //-webkit-font-smoothing: antialiased;
  -webkit-user-select: none;
}

body {
  font-family: monospace;
  font-family: "Courier";
  font-family: "Menlo";
  font-size: 15px;
  line-height: 20px;
  white-space: nowrap;
  color: #f8f8f2;
  background-color: #272822;
  -webkit-text-size-adjust: 100%;
}

::selection {
  //color: white;
  //background: hsl(200, 100%, 50%);
}
:focus {
  outline: none;
}

doc, row {
  display: block;
}
tag, prop, val, txt {
  display: inline;
  line-height: 20px;
  white-space: pre-wrap;
  padding: 1px calc(.5ch - 1px);
  margin: 0 1px;
  border-radius: 2px;
}

doc {
  padding: 0 0;
  background-image: linear-gradient(to left, #34332a 1px, transparent 1px);
  background-position: .8ch top;
  background-repeat: repeat-x;
  background-size: 2ch 100%;
}
row {
  background: #272822;
}

tag {
  color: #f92772;
}
prop {
  color: #a6e22d;
}
val {
  color: #e6db74;
}
prop + val::before {
  content: ':';
  font: inherit;
  position: absolute;
  margin-left: calc(-1ch + 1px);
  color: #a6e22d;
}
txt ~ * {
  outline: 1px dotted red;
}


/*TODO: Lol crazy indentation with css, need to make this with js or somehow smarter*/
[tabs] {padding-left: 22ch;}
[tabs="0"] {padding-left: 0ch}
[tabs="1"] {padding-left: 2ch}
[tabs="2"] {padding-left: 4ch}
[tabs="3"] {padding-left: 6ch}
[tabs="4"] {padding-left: 8ch}
[tabs="5"] {padding-left: 10ch}
[tabs="6"] {padding-left: 12ch}
[tabs="7"] {padding-left: 14ch}
[tabs="8"] {padding-left: 16ch}
[tabs="9"] {padding-left: 18ch}
[tabs="10"] {padding-left: 20ch}

/* TODO: could use requestIdleCallback for checking and marking errors, kinda like os level spell check does */
[tabs="0"] + :-webkit-any([tabs="2"],[tabs="3"],[tabs="4"],[tabs="5"],[tabs="6"],[tabs="7"],[tabs="8"],[tabs="9"],[tabs="10"]) > :first-child,
[tabs="1"] + :-webkit-any([tabs="3"],[tabs="4"],[tabs="5"],[tabs="6"],[tabs="7"],[tabs="8"],[tabs="9"],[tabs="10"]) > :first-child,
[tabs="2"] + :-webkit-any([tabs="4"],[tabs="5"],[tabs="6"],[tabs="7"],[tabs="8"],[tabs="9"],[tabs="10"]) > :first-child,
[tabs="3"] + :-webkit-any([tabs="5"],[tabs="6"],[tabs="7"],[tabs="8"],[tabs="9"],[tabs="10"]) > :first-child,
[tabs="4"] + :-webkit-any([tabs="6"],[tabs="7"],[tabs="8"],[tabs="9"],[tabs="10"]) > :first-child,
[tabs="5"] + :-webkit-any([tabs="7"],[tabs="8"],[tabs="9"],[tabs="10"]) > :first-child,
[tabs="6"] + :-webkit-any([tabs="8"],[tabs="9"],[tabs="10"]) > :first-child,
[tabs="7"] + :-webkit-any([tabs="9"],[tabs="10"]) > :first-child,
[tabs="8"] + :-webkit-any([tabs="10"]) > :first-child {
  outline: 1px dotted red;
}
[type="txt"][tabs="0"] + :-webkit-any([tabs="2"],[tabs="2"],[tabs="3"],[tabs="4"],[tabs="5"],[tabs="6"],[tabs="7"],[tabs="8"],[tabs="9"],[tabs="10"]) > :first-child,
[type="txt"][tabs="1"] + :-webkit-any([tabs="2"],[tabs="3"],[tabs="4"],[tabs="5"],[tabs="6"],[tabs="7"],[tabs="8"],[tabs="9"],[tabs="10"]) > :first-child,
[type="txt"][tabs="2"] + :-webkit-any([tabs="3"],[tabs="4"],[tabs="5"],[tabs="6"],[tabs="7"],[tabs="8"],[tabs="9"],[tabs="10"]) > :first-child,
[type="txt"][tabs="3"] + :-webkit-any([tabs="4"],[tabs="5"],[tabs="6"],[tabs="7"],[tabs="8"],[tabs="9"],[tabs="10"]) > :first-child,
[type="txt"][tabs="4"] + :-webkit-any([tabs="5"],[tabs="6"],[tabs="7"],[tabs="8"],[tabs="9"],[tabs="10"]) > :first-child,
[type="txt"][tabs="5"] + :-webkit-any([tabs="6"],[tabs="7"],[tabs="8"],[tabs="9"],[tabs="10"]) > :first-child,
[type="txt"][tabs="6"] + :-webkit-any([tabs="7"],[tabs="8"],[tabs="9"],[tabs="10"]) > :first-child,
[type="txt"][tabs="7"] + :-webkit-any([tabs="8"],[tabs="9"],[tabs="10"]) > :first-child,
[type="txt"][tabs="8"] + :-webkit-any([tabs="9"],[tabs="10"]) > :first-child {
  outline: 1px dotted red;
}

.com {
  //font-style: italic;
}
.com > *,
.com > *::before {
  color: #75715e;
}

.sel {
  background: #49483E;
  box-shadow:
    inset 0px 0px 0px 1px #828380;
}
.cur {
  position: relative;
  box-shadow: inset 0px 0px 0px 1px #828380;
  box-shadow: inset 0px 0px 0px 1px hsla(200, 100%, 50%, 1);
}
.cur::after {
  content: '';
  position: absolute;
  display: block;
  z-index: 100;
  top: auto;
  bottom: -1px;
  left: auto;
  right: -1px;
  width: 5px;
  height: 5px;
  border-radius: 1px;
  background: hsla(200, 100%, 50%, 1);
  box-shadow:
    -1px -1px 0px 0px hsl(55, 8%, 26%);
}
.hilite {
  background: #49483E;
  //box-shadow: inset 0px 0px 0px 1px #828380;
}
.hilite + row::before {
  //Show insertion point somehow? Or is it enough that users learn it as they create new elements
}
.folded::after {
  content: 'â€¦';
}
.hidden {
  display: none;
}



[contenteditable="true"],
.clone {
  color: #272822;
  background-color: white;
  box-shadow: inset 0px 0px 0px 1px white;
}
[contenteditable="true"].cur::after,
.clone.cur::after {
  box-shadow:
    -1px -1px 0px 0px white;
}

.dragsource,
.dragsource::before {
  color: transparent;
}
.dragsource > *,
.dragsource > *::before {
  color:  transparent;
}

.dragghost {
  position: absolute;
  display: none;
  opacity: .7;
  pointer-events: none;
  border-radius: 2px;
  box-shadow:
    0px 0px 0px 1px #828380,
    0px 3px 8px 0px rgba(0,0,0,.5);
}

/*TODO: drop point indicator should be a div that travels the page and gets rendered according to droptarget clientrect */
.dropbefore,
.dropafter {
  position: relative;
  //background: hsla(200, 100%, 50%, .33);
}
.dropbefore::after,
.dropafter::after {
  content: '';
  position: absolute;
  display: block;
  z-index: 100;
  top: 5px;
  left: -.5ch;
  width: 1ch;
  height: 10px;
  border-radius: 1ch;
  background: #66d9ef;
  background: hsla(200, 100%, 50%, 1);
}
.dropafter::after {
  left: auto;
  right: -.5ch;
}
row.dropbefore::after,
row.dropafter::after {
  top: -2px;
  left: auto;
  right: auto;
  width: 100%;
  height: 4px;
}
row.dropafter::after {
  top: auto;
  bottom: -2px;
}
